"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toObject = toObject;
exports.forEach = forEach;
exports.clone = clone;
exports.filter = filter;
exports.map = map;
exports.some = some;
exports.every = every;
exports.find = find;
exports.findKey = findKey;

var _typeUtil = require("./typeUtil");

var _arrayUtil = require("./arrayUtil");

function toObject(obj) {
  return (0, _typeUtil.isObject)(obj) ? obj : {};
}

function forEach(obj, func) {
  Object.keys(obj).forEach(function (key) {
    func(obj[key], key, obj);
  });
}

function clone() {
  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var keys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  return (0, _arrayUtil.aryToObject)(keys, function (item) {
    return item;
  }, function (item) {
    return obj[item];
  });
}

function filter(obj, func) {
  return clone(obj, Object.keys(obj).filter(function (key) {
    return func(obj[key], key, obj);
  }));
}

function map(obj, func) {
  return (0, _arrayUtil.aryToObject)(Object.keys(obj), function (item) {
    return item;
  }, function (item) {
    return func(obj[item], item, obj);
  });
}

function some(obj, func) {
  return Object.keys(obj).some(function (key) {
    return func(obj[key], key, obj);
  });
}

function every(obj, func) {
  return Object.keys(obj).every(function (key) {
    return func(obj[key], key, obj);
  });
}

function find(obj, func) {
  return obj[findKey(obj, func)];
}

function findKey(obj, func) {
  return Object.keys(obj).find(function (key) {
    return func(obj[key], key, obj);
  });
}